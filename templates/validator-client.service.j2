[Unit]
Description=Validator Client node on {{ validator_client_network }} network ({{ validator_client_repo_branch }})
Documentation=https://github.com/status-im/nimbus-eth2
Requires=network-online.target
After=network-online.target

[Service]
User={{ validator_client_user }}
Group={{ validator_client_group }}
LimitNOFILE={{ validator_client_service_nofile_limit }}
WorkingDirectory={{ validator_client_service_path }}
SyslogIdentifier={{ validator_client_service_name }}
SyslogFacility=local6
SyslogLevel=debug
Restart=on-failure
RestartPreventExitStatus={{ validator_client_doppelganger_exit_code }}
ExecStart={{ validator_client_bin_path }}/nimbus_validator_client \
    --data-dir={{ validator_client_data_path }} \
    --secrets-dir={{ validator_client_secrets_path }} \
    --validators-dir={{ validator_client_validators_path }} \
    --log-format={{ validator_client_log_format }} \
    --log-level={{ validator_client_log_level }} \
    --doppelganger-detection={{ validator_client_doppelganger_detection | to_json }} \
{% for beacon_node_url in validator_client_beacon_node_urls %}
    --beacon-node={{ beacon_node_url }} \
{% endfor %}
    --payload-builder={{ validator_client_payload_builder_enabled | to_json }} \
    --keymanager={{ validator_client_keymanager_enabled | to_json }} \
{% if validator_client_suggested_fee_recipient is defined %}
    --suggested-fee-recipient={{ validator_client_suggested_fee_recipient | mandatory }} \
{% endif %}
{% if validator_client_keymanager_enabled %}
    --keymanager-address={{ validator_client_keymanager_address }} \
    --keymanager-port={{ validator_client_keymanager_port }} \
    --keymanager-allow-origin={{ validator_client_keymanager_allow_origin | join(",") }} \
    --keymanager-token-file={{ validator_client_keymanager_token_file | mandatory }} \
{% endif %}
    --metrics={{ validator_client_metrics_enabled | to_json }} \
{% if validator_client_metrics_enabled %}
    --metrics-address={{ validator_client_metrics_address }} \
    --metrics-port={{ validator_client_metrics_port }} \
{% endif %}
{% for extra_flag in validator_client_extra_flags %}
    {{ extra_flag }}
{% endfor %}

[Install]
WantedBy=multi-user.target
